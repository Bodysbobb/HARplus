% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_summary.R
\name{compare_var_structure}
\alias{compare_var_structure}
\title{Compare Variable Structures Across Multiple SL4 and HAR Objects}
\usage{
compare_var_structure(variables = NULL, ..., keep_unique = FALSE)
}
\arguments{
\item{variables}{Character vector specifying variable names to compare. Use \code{NULL} or \code{"ALL"}
to compare all variables (default is \code{NULL}).}

\item{...}{Named SL4 or HAR objects created using \code{read_sl4x()} or \code{read_harx()}.
At least two objects must be provided.}

\item{keep_unique}{Logical. If \code{TRUE}, returns unique variable structures across
all inputs instead of checking compatibility (default is \code{FALSE}).}
}
\value{
A list containing:
\itemize{
\item \code{match}: A data frame of variables with consistent structures across inputs.
\item \code{diff} (if differences exist): A data frame highlighting variables with mismatched
structures, showing how they differ across inputs.
}
}
\description{
This function compares the variable structures of multiple SL4 and HAR objects
to check compatibility for \code{rbind} operations. It ensures that variables have
consistent dimension names and order across all inputs.
}
\details{
The function provides two modes:
\itemize{
\item If \code{keep_unique = FALSE}, it verifies if variables match across inputs for
compatibility and identifies discrepancies.
\item If \code{keep_unique = TRUE}, it extracts and returns unique variable structures
across all provided objects.
}
}
\examples{
# ─── Load SL4 and HAR Data ─────────────────────────────────────────────
sl4_data1 <- read_sl4x("path/to/file1.sl4")
sl4_data2 <- read_sl4x("path/to/file2.sl4")
har_data  <- read_harx("path/to/file.har")

# ─── Compare Structures for Compatibility ──────────────────────────────
comparison <- compare_var_structure(
  variables = c("qo", "EV"), sl4_data1, sl4_data2
)

# ─── Extract Unique Variable Structures Across Inputs ──────────────────
unique_vars <- compare_var_structure(
  variables = c("qo", "EV"), sl4_data1, sl4_data2, har_data,
  keep_unique = TRUE
)
}
