% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_sl4x.R
\name{group_by_dims}
\alias{group_by_dims}
\title{─────────────────────────────────────────────────────────────────────────────
Group and Merge Data by Dimension Priority}
\usage{
group_by_dims(grouped_data, dimension_map)
}
\arguments{
\item{grouped_data}{A named list of data frames grouped by dimension patterns.
This is typically the output from \code{extract_by_dims()}.}

\item{dimension_map}{A data frame defining the priority grouping with three required columns:
\itemize{
\item \code{dimension}: Dimension name (e.g., \code{"COMM"}, \code{"ACTS"}, \code{"REG"}).
\item \code{group}: Group name for aggregation (e.g., \code{"Sector"}, \code{"Region"}).
\item \code{priority}: Numeric priority (lower value = higher priority).
}}
}
\value{
A structured list containing:
\itemize{
\item \strong{\code{merged_data}}: A list of merged datasets based on dimension priorities.
\item \strong{\code{unmergeable}}: Datasets that could not be merged due to different structures.
\item \strong{\code{merge_report}}: A data frame listing datasets that failed to merge.
}
}
\description{
This function organizes and merges \strong{grouped datasets} (from \code{extract_by_dims()})
based on \strong{predefined dimension priorities}.
}
\details{
It ensures that datasets with \strong{identical column structures} are merged, while
reporting those that cannot be merged due to \strong{structural differences}.

The function processes datasets across \strong{different dimension levels} (e.g., \verb{1D}, \verb{2D}, \verb{3D})
while maintaining structured groupings based on \strong{dimension priorities}.
}
\examples{
# ─── Load Grouped SL4 Data ────────────────────────────────────────────
grouped_sl4 <- extract_by_dims(NULL, sl4_data1, sl4_data2, 
                               experiment_names = c("baseline", "policy"))

# ─── Define Dimension Priority Mapping ───────────────────────────────
priority_mapping <- data.frame(
  dimension = c("COMM", "ACTS", "REG"),
  group = c("Sector", "Sector", "Region"),
  priority = c(1, 1, 2),  # "Sector" (COMM, ACTS) > "Region" (REG)
  stringsAsFactors = FALSE
)

# ─── Apply Dimension Priority Grouping ──────────────────────────────
regrouped_data <- group_by_dims(grouped_sl4, priority_mapping)

# ─── Accessing the Results ──────────────────────────────────────────
merged_data <- regrouped_data$merged_data
unmergeable_data <- regrouped_data$unmergeable
merge_report <- regrouped_data$merge_report
}
